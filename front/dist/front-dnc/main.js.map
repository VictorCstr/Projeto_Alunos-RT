{"version":3,"file":"main.js","mappings":";;;;;;;;;;;;;;;;;;;;AACuD;AAC2B;AACiB;AAC/B;AAC0B;AACxB;;;AAEtE,MAAMM,MAAM,GAAW,CACrB;EAAEC,IAAI,EAAE,EAAE;EAAEC,SAAS,EAAEL,6EAAcA;AAAA,CAAE,EACvC;EACEI,IAAI,EAAE,QAAQ;EACdC,SAAS,EAAEJ,uGAAsB;EACjCK,WAAW,EAAE,CAACJ,+EAAS;CACxB,EACD;EAAEE,IAAI,EAAE,OAAO;EAAEC,SAAS,EAAEP,2FAAkBA;AAAA,CAAE,EAChD;EAAEM,IAAI,EAAE,YAAY;EAAEC,SAAS,EAAEN,4GAAuBA;AAAA,CAAE,CAC3D;AAED,MAIaQ,gBAAgB;AAAhBA,gBAAgB;mBAAhBA,gBAAgB;AAAA;AAAhBA,gBAAgB;QAAhBA;AAAgB;AAAhBA,gBAAgB;YAHjBV,iEAAoB,CAACM,MAAM,CAAC,EAC5BN,yDAAY;AAAA;AAEK;;sHAAhBU,gBAAgB;IAAAE,OAAA,GAAAC,yDAAA;IAAAC,OAAA,GAFjBd,yDAAY;EAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;ACnBxB,MAKae,YAAY;EALzBC,YAAA;IAME,KAAAC,KAAK,GAAG,WAAW;;;AADRF,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;QAAZA,YAAY;EAAAG,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,QAAA,WAAAC,sBAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCPzBE,uDAAA,iBAAyB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACCiC;AACQ;AACS;AACnB;AACT;AACmC;AACX;AACA;AAC4B;AACjC;AACE;AAC0B;;AAE9F,MA0BaU,SAAS;AAATA,SAAS;mBAATA,SAAS;AAAA;AAATA,SAAS;QAATA,SAAS;EAAAC,SAAA,GAFRrB,wDAAY;AAAA;AAEboB,SAAS;aATT,CACT;IACEE,OAAO,EAAEP,oEAAiB;IAC1BQ,QAAQ,EAAEJ,2EAAe;IACzBK,KAAK,EAAE;GACR,CACF;EAAA3B,OAAA,GAZCe,qEAAa,EACbjB,iEAAgB,EAChBmB,gEAAmB,EACnBD,wDAAW,EACXG,mEAAgB;AAAA;AAWE;;sHAATI,SAAS;IAAAK,YAAA,GAxBlBzB,wDAAY,EACZd,2FAAkB,EAClB+B,gFAAe,EACfC,gFAAe,EACf/B,4GAAuB,EACvBC,6EAAc,EACdC,uGAAsB;IAAAQ,OAAA,GAGtBe,qEAAa,EACbjB,iEAAgB,EAChBmB,gEAAmB,EACnBD,wDAAW,EACXG,mEAAgB;EAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;AC5BgD;AAErB;;;;;;;;ICezCN,4DAAA,cAGC;IACCA,oDAAA,0CACF;IAAAA,0DAAA,EAAM;;;;;IAWNA,4DAAA,cAGC;IACCA,oDAAA,0DACF;IAAAA,0DAAA,EAAM;;;;;IAWNA,4DAAA,cAGC;IACCA,oDAAA,+CACF;IAAAA,0DAAA,EAAM;;;;;IAERA,4DAAA,cAA0D;IACxDA,oDAAA,6EACF;IAAAA,0DAAA,EAAM;;;;;IACNA,4DAAA,cAA0D;IACxDA,oDAAA,GACF;IAAAA,0DAAA,EAAM;;;;IADJA,uDAAA,GACF;IADEA,gEAAA,MAAAyB,MAAA,CAAAC,IAAA,MACF;;;ADvDJ,MAKajD,uBAAuB;EAMlCc,YACUoC,WAAwB,EACxBC,MAAc,EACdC,WAAwB;IAFxB,KAAAF,WAAW,GAAXA,WAAW;IACX,KAAAC,MAAM,GAANA,MAAM;IACN,KAAAC,WAAW,GAAXA,WAAW;IANrB,KAAAC,MAAM,GAAG,IAAIb,yCAAO,EAAQ;IAQ1B,IAAI,CAACc,UAAU,EAAE;EACnB;EAEAA,UAAUA,CAAA;IACR,IAAI,CAACC,IAAI,GAAG,IAAI,CAACH,WAAW,CAACI,KAAK,CAAC;MACjCC,KAAK,EAAE,CAAC,EAAE,EAAE,CAAClB,+DAAmB,CAAC,CAAC;MAClCoB,IAAI,EAAE,CAAC,EAAE,EAAE,CAACpB,+DAAmB,CAAC,CAAC;MACjCqB,QAAQ,EAAE,CAAC,EAAE,EAAE,CAACrB,+DAAmB,CAAC;KACrC,CAAC;EACJ;EAEAsB,QAAQA,CAAA;IACN,IAAI,CAACX,WAAW,CACbY,aAAa,CAAC,IAAI,CAACP,IAAI,CAACQ,KAAK,CAAC,CAC9BC,IAAI,CACHvB,gDAAU,CAAEwB,KAAK,IAAI;MACnBC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACpB,IAAIA,KAAK,CAACA,KAAK,CAACE,OAAO,IAAIC,SAAS,EAAE;QACpCF,OAAO,CAACG,GAAG,CAAC,MAAM,CAAC;QACnB,IAAI,CAACpB,IAAI,GAAGgB,KAAK,CAACA,KAAK,CAACE,OAAO,CAACG,GAAG;;MAGrC,IAAI,CAACrB,IAAI,GAAGgB,KAAK,CAACA,KAAK,CAACA,KAAK;MAC7B,IAAI,CAACZ,MAAM,CAACkB,IAAI,CAAC,IAAI,CAAC;MACtB,OAAO7B,wCAAE,EAAE;IACb,CAAC,CAAC,CACH,CACA8B,SAAS,CAAC;MACTD,IAAI,EAAEA,CAAA,KAAK;QACTE,KAAK,CAAC,6BAA6B,CAAC;QACpC,IAAI,CAACtB,MAAM,CAACuB,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;MAC5B;KACD,CAAC;EACN;;AA5CW1E,uBAAuB;mBAAvBA,uBAAuB,EAAAuB,+DAAA,CAAAZ,sEAAA,GAAAY,+DAAA,CAAAsD,mDAAA,GAAAtD,+DAAA,CAAAwD,uDAAA;AAAA;AAAvB/E,uBAAuB;QAAvBA,uBAAuB;EAAAgB,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAA+D,MAAA;EAAA9D,QAAA,WAAA+D,iCAAA7D,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCZpCE,4DAAA,cAAiD;MAAxBA,wDAAA,sBAAA6D,0DAAA;QAAA,OAAY9D,GAAA,CAAAuC,QAAA,EAAU;MAAA,EAAC;MAC9CtC,4DAAA,aAAwD;MACtDA,uDAAA,aAME;MACFA,4DAAA,YAA8B;MAAAA,oDAAA,gCAAyB;MAAAA,0DAAA,EAAK;MAC5DA,4DAAA,aAAwB;MACtBA,uDAAA,eAME;MACFA,wDAAA,IAAA+D,sCAAA,iBAKM;MACR/D,0DAAA,EAAM;MAENA,4DAAA,UAAK;MACHA,uDAAA,eAME;MACFA,wDAAA,KAAAgE,uCAAA,iBAKM;MACRhE,0DAAA,EAAM;MAENA,4DAAA,cAAwB;MACtBA,uDAAA,gBAME;MACFA,wDAAA,KAAAiE,uCAAA,iBAKM;MACRjE,0DAAA,EAAM;MACNA,wDAAA,KAAAkE,uCAAA,iBAEM;;MACNlE,wDAAA,KAAAmE,uCAAA,iBAEM;;MAENnE,uDAAA,gBAKE;MACJA,0DAAA,EAAM;;;;;;MAtEFA,wDAAA,cAAAD,GAAA,CAAAiC,IAAA,CAAkB;MAoBfhC,uDAAA,GAA2D;MAA3DA,wDAAA,WAAAqE,OAAA,GAAAtE,GAAA,CAAAiC,IAAA,CAAAsC,GAAA,2BAAAD,OAAA,CAAAE,MAAA,OAAAF,OAAA,GAAAtE,GAAA,CAAAiC,IAAA,CAAAsC,GAAA,2BAAAD,OAAA,CAAAG,OAAA,EAA2D;MAgB3DxE,uDAAA,GAA2D;MAA3DA,wDAAA,WAAAyE,OAAA,GAAA1E,GAAA,CAAAiC,IAAA,CAAAsC,GAAA,2BAAAG,OAAA,CAAAF,MAAA,OAAAE,OAAA,GAAA1E,GAAA,CAAAiC,IAAA,CAAAsC,GAAA,2BAAAG,OAAA,CAAAD,OAAA,EAA2D;MAgB3DxE,uDAAA,GAAmE;MAAnEA,wDAAA,WAAA0E,OAAA,GAAA3E,GAAA,CAAAiC,IAAA,CAAAsC,GAAA,+BAAAI,OAAA,CAAAH,MAAA,OAAAG,OAAA,GAAA3E,GAAA,CAAAiC,IAAA,CAAAsC,GAAA,+BAAAI,OAAA,CAAAF,OAAA,EAAmE;MAKpCxE,uDAAA,GAAoB;MAApBA,wDAAA,SAAAA,yDAAA,QAAAD,GAAA,CAAA+B,MAAA,EAAoB;MAGpB9B,uDAAA,GAAoB;MAApBA,wDAAA,SAAAA,yDAAA,QAAAD,GAAA,CAAA+B,MAAA,EAAoB;MAQtD9B,uDAAA,GAAwB;MAAxBA,wDAAA,cAAAD,GAAA,CAAAiC,IAAA,CAAA4C,KAAA,CAAwB;;;;;;;;;;;;;;;;;;;;;;AClE9B,MAKapE,eAAe;AAAfA,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;QAAfA,eAAe;EAAAf,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAA+D,MAAA;EAAA9D,QAAA,WAAAiF,yBAAA/E,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCP5BE,4DAAA,aAAwD;MACnDA,oDAAA,kBAAM;MAAAA,0DAAA,EAAI;MACbA,4DAAA,QAAG;MAAAA,oDAAA,sCAA+B;MAAAA,0DAAA,EAAI;;;;;;;;;;;;;;;;;;;;;;;ACAxC,MAKaO,eAAe;EAC1BhB,YAAA,GAAe;;AADJgB,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;QAAfA,eAAe;EAAAd,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAA+D,MAAA;EAAA9D,QAAA,WAAAkF,yBAAAhF,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCP5BE,4DAAA,aAA+D;MAGzDA,uDAAA,aAAiE;MACjEA,oDAAA,wCACF;MAAAA,0DAAA,EAAI;MACJA,4DAAA,gBAAmE;MACjEA,oDAAA,0BACF;MAAAA,0DAAA,EAAS;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IEJPA,4DAAA,aAAuE;IAE/DA,oDAAA,GAAoB;IAAAA,0DAAA,EAAK;IAC7BA,4DAAA,YAAqB;IAAAA,oDAAA,GAAoB;IAAAA,0DAAA,EAAI;IAC7CA,4DAAA,YAAqB;IAAAA,oDAAA,GAAwB;IAAAA,0DAAA,EAAI;IACjDA,4DAAA,YAAqB;IAAAA,oDAAA,GAA4B;IAAAA,0DAAA,EAAI;IACrDA,4DAAA,aAAqB;IAAAA,oDAAA,IAAkC;IAAAA,0DAAA,EAAI;;;;;IAJvDA,uDAAA,GAAoB;IAApBA,gEAAA,wBAAA+E,IAAA,SAAoB;IACH/E,uDAAA,GAAoB;IAApBA,gEAAA,SAAAgF,UAAA,CAAAC,EAAA,KAAoB;IACpBjF,uDAAA,GAAwB;IAAxBA,gEAAA,WAAAgF,UAAA,CAAA5C,IAAA,KAAwB;IACxBpC,uDAAA,GAA4B;IAA5BA,gEAAA,aAAAgF,UAAA,CAAAE,MAAA,KAA4B;IAC5BlF,uDAAA,GAAkC;IAAlCA,gEAAA,iBAAAgF,UAAA,CAAAG,QAAA,KAAkC;;;;;IAiB7DnF,4DAAA,cAGC;IAEOA,oDAAA,GAAoB;IAAAA,0DAAA,EAAK;IAC7BA,4DAAA,YAAqB;IAAAA,oDAAA,GAAoB;IAAAA,0DAAA,EAAI;IAC7CA,4DAAA,YAAqB;IAAAA,oDAAA,GAAwB;IAAAA,0DAAA,EAAI;IACjDA,4DAAA,YAAqB;IAAAA,oDAAA,GAA4B;IAAAA,0DAAA,EAAI;;;;;IAHjDA,uDAAA,GAAoB;IAApBA,gEAAA,wBAAAoF,IAAA,SAAoB;IACHpF,uDAAA,GAAoB;IAApBA,gEAAA,SAAAqF,UAAA,CAAAJ,EAAA,KAAoB;IACpBjF,uDAAA,GAAwB;IAAxBA,gEAAA,WAAAqF,UAAA,CAAAjD,IAAA,KAAwB;IACxBpC,uDAAA,GAA4B;IAA5BA,gEAAA,aAAAqF,UAAA,CAAAH,MAAA,KAA4B;;;AD7BzD,MAKaxG,cAAc;EAKzBa,YACU+F,KAAqB,EACrB3D,WAAwB,EACxB4D,aAA4B;IAF5B,KAAAD,KAAK,GAALA,KAAK;IACL,KAAA3D,WAAW,GAAXA,WAAW;IACX,KAAA4D,aAAa,GAAbA,aAAa;IAErB,IAAI,CAACC,iBAAiB,EAAE;IAExB,IAAI,CAACD,aAAa,CAACE,MAAM,EAAE;IAE3B,IAAI,CAACF,aAAa,CAACG,OAAO,CAAC,SAAS,CAAC,CAACzC,SAAS,CAAE0C,MAAM,IAAI;MACzDhD,OAAO,CAACG,GAAG,CAAC,qBAAqB,CAAC;MAClC,IAAI,CAACyC,aAAa,CAACG,OAAO,CAAC,WAAW,CAAC,CAACzC,SAAS,CAAE2C,IAAI,IAAI;QACzDjD,OAAO,CAACG,GAAG,CAAC,iBAAiB,CAAC;QAC9BH,OAAO,CAACG,GAAG,CAAC8C,IAAI,CAAC;QACjB,IAAI,CAACJ,iBAAiB,EAAE;MAC1B,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ;EAEAA,iBAAiBA,CAAA;IACf,IAAI,CAAC7D,WAAW,CAACkE,eAAe,EAAE,CAAC5C,SAAS,CACzC6C,KAAK,IAAI;MACR,IAAI,CAACC,QAAQ,GAAGD,KAAK;IACvB,CAAC,EACApD,KAAK,IAAI;MACRC,OAAO,CAACG,GAAG,CAACJ,KAAK,CAAC;IACpB,CAAC,CACF;EACH;EAEAsD,YAAYA,CAACd,MAAc;IACzB,IAAI,CAACA,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACe,mBAAmB,EAAE;EAC5B;EAEAA,mBAAmBA,CAAA;IACjB,IAAI,CAACtE,WAAW,CAACuE,kBAAkB,CAAC,IAAI,CAAChB,MAAgB,CAAC,CAACjC,SAAS,CACjE6C,KAAK,IAAI;MACR,IAAI,CAACK,eAAe,GAAGL,KAAK;IAC9B,CAAC,EACApD,KAAK,IAAI;MACRC,OAAO,CAACG,GAAG,CAACJ,KAAK,CAAC;IACpB,CAAC,CACF;EACH;;AAjDWhE,cAAc;mBAAdA,cAAc,EAAAsB,+DAAA,CAAAZ,2DAAA,GAAAY,+DAAA,CAAAsD,sEAAA,GAAAtD,+DAAA,CAAAwD,0EAAA;AAAA;AAAd9E,cAAc;QAAdA,cAAc;EAAAe,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAA+D,MAAA;EAAA9D,QAAA,WAAA0G,wBAAAxG,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCX3BE,4DAAA,cAAoC;MAEAA,oDAAA,+BAAwB;MAAAA,0DAAA,EAAK;MAC7DA,4DAAA,aAAwB;MACtBA,wDAAA,IAAAuG,6BAAA,kBAQM;MACRvG,0DAAA,EAAM;MAGRA,4DAAA,YAAqC;MAAAA,oDAAA,yBAAkB;MAAAA,0DAAA,EAAK;MAC5DA,4DAAA,gBAAkE;MAAhCA,wDAAA,mBAAAwG,gDAAA;QAAA,OAASzG,GAAA,CAAAiG,YAAA,CAAa,OAAO,CAAC;MAAA,EAAC;MAC/DhG,oDAAA,cACF;MAAAA,0DAAA,EAAS;MACTA,4DAAA,iBAAuE;MAArCA,wDAAA,mBAAAyG,iDAAA;QAAA,OAAS1G,GAAA,CAAAiG,YAAA,CAAa,YAAY,CAAC;MAAA,EAAC;MACpEhG,oDAAA,oBACF;MAAAA,0DAAA,EAAS;MACTA,4DAAA,iBAAoE;MAAlCA,wDAAA,mBAAA0G,iDAAA;QAAA,OAAS3G,GAAA,CAAAiG,YAAA,CAAa,SAAS,CAAC;MAAA,EAAC;MACjEhG,oDAAA,iBACF;MAAAA,0DAAA,EAAS;MACTA,4DAAA,cAAwB;MACtBA,wDAAA,KAAA2G,8BAAA,kBAUM;MACR3G,0DAAA,EAAM;;;MAlCyCA,uDAAA,GAAa;MAAbA,wDAAA,YAAAD,GAAA,CAAAgG,QAAA,CAAa;MAyBpC/F,uDAAA,IAAoB;MAApBA,wDAAA,YAAAD,GAAA,CAAAoG,eAAA,CAAoB;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5BsB;AAErB;;;;;;;;ICkBvCnG,4DAAA,cAGC;IACCA,oDAAA,kDACF;IAAAA,0DAAA,EAAM;;;;;IAWNA,4DAAA,cAGC;IACCA,oDAAA,2CACF;IAAAA,0DAAA,EAAM;;;;;IAERA,4DAAA,cAA0D;IACxDA,oDAAA,yEACF;IAAAA,0DAAA,EAAM;;;;;IACNA,4DAAA,cAA0D;IACxDA,oDAAA,GACF;IAAAA,0DAAA,EAAM;;;;IADJA,uDAAA,GACF;IADEA,gEAAA,MAAA4G,MAAA,CAAAlF,IAAA,MACF;;;AD1CN,MAKalD,kBAAkB;EAC7Be,YACUoC,WAAwB,EACxBC,MAAc,EACdC,WAAwB;IAFxB,KAAAF,WAAW,GAAXA,WAAW;IACX,KAAAC,MAAM,GAANA,MAAM;IACN,KAAAC,WAAW,GAAXA,WAAW;IAKrB,KAAAC,MAAM,GAAG,IAAIb,yCAAO,EAAW;IAH7B,IAAI,CAACc,UAAU,EAAE;EACnB;EAKAA,UAAUA,CAAA;IACR,IAAI,CAACC,IAAI,GAAG,IAAI,CAACH,WAAW,CAACI,KAAK,CAAC;MACjCC,KAAK,EAAE,CAAC,EAAE,EAAE,CAAClB,+DAAmB,CAAC,CAAC;MAClCqB,QAAQ,EAAE,CAAC,EAAE,EAAE,CAACrB,+DAAmB,CAAC;KACrC,CAAC;EACJ;EAEAsB,QAAQA,CAAA;IACN,IAAI,CAACX,WAAW,CACbkF,KAAK,CAAC,IAAI,CAAC7E,IAAI,CAACQ,KAAK,CAAC,CACtBC,IAAI,CACHvB,gDAAU,CAAEwB,KAAK,IAAI;MACnB,IAAI,CAAChB,IAAI,GAAGgB,KAAK,CAACA,KAAK,CAACE,OAAO,CAACG,GAAG,CAACA,GAAG,IAAIL,KAAK,CAACA,KAAK,CAACE,OAAO,CAACG,GAAG;MAClE,IAAI,CAACjB,MAAM,CAACkB,IAAI,CAAC,IAAI,CAAC;MACtB,OAAO7B,wCAAE,EAAE;IACb,CAAC,CAAC,CACH,CACA8B,SAAS,CAAC;MACTD,IAAI,EAAG4C,IAAS,IAAI;QAClB,MAAMkB,GAAG,GAAGC,cAAc,CAACC,OAAO,CAAC,OAAO,EAAEpB,IAAI,CAAChD,OAAiB,CAAC;QACnEM,KAAK,CAAC,6BAA6B,CAAC;QACpC,IAAI,CAACtB,MAAM,CAACuB,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC;MACnC;KACD,CAAC;EACN;;AApCW3E,kBAAkB;mBAAlBA,kBAAkB,EAAAwB,+DAAA,CAAAZ,sEAAA,GAAAY,+DAAA,CAAAsD,mDAAA,GAAAtD,+DAAA,CAAAwD,uDAAA;AAAA;AAAlBhF,kBAAkB;QAAlBA,kBAAkB;EAAAiB,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAA+D,MAAA;EAAA9D,QAAA,WAAAqH,4BAAAnH,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCZ/BE,4DAAA,cAAoC;MAEPA,wDAAA,sBAAAkH,qDAAA;QAAA,OAAYnH,GAAA,CAAAuC,QAAA,EAAU;MAAA,EAAC;MAC9CtC,uDAAA,aAME;MACFA,4DAAA,YAA8B;MAAAA,oDAAA,oCAAwB;MAAAA,0DAAA,EAAK;MAE3DA,4DAAA,aAA2B;MACzBA,uDAAA,eAME;MACFA,4DAAA,eAA2B;MAAAA,oDAAA,uBAAgB;MAAAA,0DAAA,EAAQ;MACnDA,wDAAA,KAAAmH,kCAAA,iBAKM;MACRnH,0DAAA,EAAM;MACNA,4DAAA,cAA2B;MACzBA,uDAAA,gBAME;MACFA,4DAAA,iBAA8B;MAAAA,oDAAA,aAAK;MAAAA,0DAAA,EAAQ;MAC3CA,wDAAA,KAAAoH,kCAAA,iBAKM;MACRpH,0DAAA,EAAM;MACNA,wDAAA,KAAAqH,kCAAA,iBAEM;;MACNrH,wDAAA,KAAAsH,kCAAA,iBAEM;;MACNtH,4DAAA,kBAKC;MACCA,oDAAA,eACF;MAAAA,0DAAA,EAAS;MAEXA,4DAAA,kBAA0E;MACxEA,oDAAA,yCACF;MAAAA,0DAAA,EAAS;;;;;MA3DHA,uDAAA,GAAkB;MAAlBA,wDAAA,cAAAD,GAAA,CAAAiC,IAAA,CAAkB;MAqBjBhC,uDAAA,GAA2D;MAA3DA,wDAAA,WAAAqE,OAAA,GAAAtE,GAAA,CAAAiC,IAAA,CAAAsC,GAAA,2BAAAD,OAAA,CAAAE,MAAA,OAAAF,OAAA,GAAAtE,GAAA,CAAAiC,IAAA,CAAAsC,GAAA,2BAAAD,OAAA,CAAAG,OAAA,EAA2D;MAgB3DxE,uDAAA,GAAmE;MAAnEA,wDAAA,WAAAyE,OAAA,GAAA1E,GAAA,CAAAiC,IAAA,CAAAsC,GAAA,+BAAAG,OAAA,CAAAF,MAAA,OAAAE,OAAA,GAAA1E,GAAA,CAAAiC,IAAA,CAAAsC,GAAA,+BAAAG,OAAA,CAAAD,OAAA,EAAmE;MAKpCxE,uDAAA,GAAoB;MAApBA,wDAAA,SAAAA,yDAAA,QAAAD,GAAA,CAAA+B,MAAA,EAAoB;MAGpB9B,uDAAA,GAAoB;MAApBA,wDAAA,SAAAA,yDAAA,QAAAD,GAAA,CAAA+B,MAAA,EAAoB;MAOtD9B,uDAAA,GAAwB;MAAxBA,wDAAA,cAAAD,GAAA,CAAAiC,IAAA,CAAA4C,KAAA,CAAwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrDoC;AAET;;;;;;;;ICiBrD5E,4DAAA,cAGC;IACCA,oDAAA,wCACF;IAAAA,0DAAA,EAAM;;;;;IASNA,4DAAA,cAGC;IACCA,oDAAA,0CACF;IAAAA,0DAAA,EAAM;;;;;IASNA,4DAAA,cAGC;IACCA,oDAAA,oDACF;IAAAA,0DAAA,EAAM;;;;;IASNA,4DAAA,cAKC;IACCA,oDAAA,uDACF;IAAAA,0DAAA,EAAM;;;;;IAWNA,4DAAA,cAGC;IACCA,oDAAA,qDACF;IAAAA,0DAAA,EAAM;;;;;IAERA,4DAAA,cAA0D;IACxDA,oDAAA,6EACF;IAAAA,0DAAA,EAAM;;;;;IACNA,4DAAA,cAA0D;IACxDA,oDAAA,GACF;IAAAA,0DAAA,EAAM;;;;IADJA,uDAAA,GACF;IADEA,gEAAA,MAAAuH,MAAA,CAAA7F,IAAA,MACF;;;ADrFJ,MAKa/C,sBAAsB;EAMjCY,YACUoC,WAAwB,EACxBC,MAAc,EACdC,WAAwB;IAFxB,KAAAF,WAAW,GAAXA,WAAW;IACX,KAAAC,MAAM,GAANA,MAAM;IACN,KAAAC,WAAW,GAAXA,WAAW;IANrB,KAAAC,MAAM,GAAG,IAAIb,yCAAO,EAAQ;IAQ1B,IAAI,CAACc,UAAU,EAAE;EACnB;EAEAA,UAAUA,CAAA;IACR,IAAI,CAACC,IAAI,GAAG,IAAI,CAACH,WAAW,CAACI,KAAK,CAAC;MACjCgD,EAAE,EAAE,CAAC,EAAE,EAAE,CAACjE,+DAAmB,CAAC,CAAC;MAC/BoB,IAAI,EAAE,CAAC,EAAE,EAAE,CAACpB,+DAAmB,CAAC,CAAC;MACjCkE,MAAM,EAAE,CAAC,EAAE,EAAE,CAAClE,+DAAmB,CAAC,CAAC;MACnCwG,YAAY,EAAE,CAAC,EAAE,EAAE,CAACxG,+DAAmB,CAAC,CAAC;MACzCyG,KAAK,EAAE,CAAC,EAAE,EAAE,CAACzG,+DAAmB,CAAC;KAClC,CAAC;EACJ;EAEAsB,QAAQA,CAAA;IACN,IAAI,CAACX,WAAW,CACb+F,aAAa,CAAC,IAAI,CAAC1F,IAAI,CAACQ,KAAK,CAAC,CAC9BC,IAAI,CACHvB,gDAAU,CAAEwB,KAAK,IAAI;MACnBC,OAAO,CAACD,KAAK,CAACA,KAAK,CAACA,KAAK,CAAC;MAC1B,IAAI,CAAChB,IAAI,GAAGgB,KAAK,CAACA,KAAK,CAACA,KAAK;MAC7B,IAAI,CAACZ,MAAM,CAACkB,IAAI,CAAC,IAAI,CAAC;MACtB,OAAO7B,wCAAE,EAAE;IACb,CAAC,CAAC,CACH,CACA8B,SAAS,CAAC;MACTD,IAAI,EAAEA,CAAA,KAAK;QACTE,KAAK,CAAC,2BAA2B,CAAC;QAClC,IAAI,CAACtB,MAAM,CAACuB,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;MAC5B;KACD,CAAC;EACN;;AAzCWxE,sBAAsB;mBAAtBA,sBAAsB,EAAAqB,+DAAA,CAAAZ,sEAAA,GAAAY,+DAAA,CAAAsD,mDAAA,GAAAtD,+DAAA,CAAAwD,uDAAA;AAAA;AAAtB7E,sBAAsB;QAAtBA,sBAAsB;EAAAc,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAA+D,MAAA;EAAA9D,QAAA,WAAA+H,gCAAA7H,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCZnCE,4DAAA,cAAiD;MAAxBA,wDAAA,sBAAA4H,yDAAA;QAAA,OAAY7H,GAAA,CAAAuC,QAAA,EAAU;MAAA,EAAC;MAC9CtC,4DAAA,aAAwD;MACtDA,uDAAA,aAME;MACFA,4DAAA,YAA8B;MAC5BA,oDAAA,0DACF;MAAAA,0DAAA,EAAK;MACLA,4DAAA,aAAwB;MACtBA,uDAAA,eAME;MACFA,wDAAA,IAAA6H,qCAAA,iBAKM;MAEN7H,uDAAA,eAME;MACFA,wDAAA,IAAA8H,qCAAA,iBAKM;MAEN9H,uDAAA,gBAME;MACFA,wDAAA,KAAA+H,sCAAA,iBAKM;MAEN/H,uDAAA,gBAME;MACFA,wDAAA,KAAAgI,sCAAA,iBAOM;MAENhI,uDAAA,iBAQE;MACFA,wDAAA,KAAAiI,sCAAA,iBAKM;MACRjI,0DAAA,EAAM;MACNA,wDAAA,KAAAkI,sCAAA,iBAEM;;MACNlI,wDAAA,KAAAmI,sCAAA,iBAEM;;MAENnI,uDAAA,iBAKE;MACJA,0DAAA,EAAM;;;;;;;;MApGFA,wDAAA,cAAAD,GAAA,CAAAiC,IAAA,CAAkB;MAsBfhC,uDAAA,GAAuD;MAAvDA,wDAAA,WAAAqE,OAAA,GAAAtE,GAAA,CAAAiC,IAAA,CAAAsC,GAAA,yBAAAD,OAAA,CAAAE,MAAA,OAAAF,OAAA,GAAAtE,GAAA,CAAAiC,IAAA,CAAAsC,GAAA,yBAAAD,OAAA,CAAAG,OAAA,EAAuD;MAcvDxE,uDAAA,GAA2D;MAA3DA,wDAAA,WAAAyE,OAAA,GAAA1E,GAAA,CAAAiC,IAAA,CAAAsC,GAAA,2BAAAG,OAAA,CAAAF,MAAA,OAAAE,OAAA,GAAA1E,GAAA,CAAAiC,IAAA,CAAAsC,GAAA,2BAAAG,OAAA,CAAAD,OAAA,EAA2D;MAc3DxE,uDAAA,GAA+D;MAA/DA,wDAAA,WAAA0E,OAAA,GAAA3E,GAAA,CAAAiC,IAAA,CAAAsC,GAAA,6BAAAI,OAAA,CAAAH,MAAA,OAAAG,OAAA,GAAA3E,GAAA,CAAAiC,IAAA,CAAAsC,GAAA,6BAAAI,OAAA,CAAAF,OAAA,EAA+D;MAc/DxE,uDAAA,GAGT;MAHSA,wDAAA,WAAAoI,OAAA,GAAArI,GAAA,CAAAiC,IAAA,CAAAsC,GAAA,mCAAA8D,OAAA,CAAA7D,MAAA,OAAA6D,OAAA,GAAArI,GAAA,CAAAiC,IAAA,CAAAsC,GAAA,mCAAA8D,OAAA,CAAA5D,OAAA,EAGT;MAeSxE,uDAAA,GAA6D;MAA7DA,wDAAA,WAAAqI,OAAA,GAAAtI,GAAA,CAAAiC,IAAA,CAAAsC,GAAA,4BAAA+D,OAAA,CAAA9D,MAAA,OAAA8D,OAAA,GAAAtI,GAAA,CAAAiC,IAAA,CAAAsC,GAAA,4BAAA+D,OAAA,CAAA7D,OAAA,EAA6D;MAK9BxE,uDAAA,GAAoB;MAApBA,wDAAA,SAAAA,yDAAA,QAAAD,GAAA,CAAA+B,MAAA,EAAoB;MAGpB9B,uDAAA,GAAoB;MAApBA,wDAAA,SAAAA,yDAAA,SAAAD,GAAA,CAAA+B,MAAA,EAAoB;MAQtD9B,uDAAA,GAAwB;MAAxBA,wDAAA,cAAAD,GAAA,CAAAiC,IAAA,CAAA4C,KAAA,CAAwB;;;;;;;;;;;;;;;;;;;;;;ACzF9B,MACanE,eAAe;EAC1BlB,YAAA,GAAe;EAEf+I,SAASA,CACPC,OAA6B,EAC7BvF,IAAiB;IAEjB,MAAM8D,GAAG,GAAGC,cAAc,CAACyB,OAAO,CAAC,OAAO,CAAC,IAAI,OAAO;IAEtD,MAAMC,OAAO,GAAGF,OAAO,CAACG,KAAK,CAAC;MAC5BC,OAAO,EAAEJ,OAAO,CAACI,OAAO,CAACC,GAAG,CAAC,eAAe,EAAE9B,GAAG;KAClD,CAAC;IAEF,OAAO9D,IAAI,CAAC6F,MAAM,CAACJ,OAAO,CAAC;EAC7B;;AAdWhI,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;SAAfA,eAAe;EAAAqI,OAAA,EAAfrI,eAAe,CAAAsI;AAAA;;;;;;;;;;;;;;;;;;;ACC5B,MAGanK,SAAS;EACpBW,YAAoBqC,MAAc;IAAd,KAAAA,MAAM,GAANA,MAAM;EAAW;EAErC5C,WAAWA,CACTgE,IAA4B,EAC5BgG,KAA0B;IAM1B,IAAIjC,cAAc,CAACyB,OAAO,CAAC,OAAO,CAAC,IAAI,IAAI,EAAE;MAC3C,OAAO,IAAI;KACZ,MAAM;MACL,IAAI,CAAC5G,MAAM,CAACuB,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;MAChC,OAAO,KAAK;;EAEhB;;AAjBWvE,SAAS;mBAATA,SAAS,EAAAoB,sDAAA,CAAAZ,mDAAA;AAAA;AAATR,SAAS;SAATA,SAAS;EAAAkK,OAAA,EAATlK,SAAS,CAAAmK,IAAA;EAAAG,UAAA,EAFR;AAAM;;;;;;;;;;;;;;;;;;;ACXc;AACY;AACa;;AAE3D,MAGa7C,aAAa;EAGxB9G,YAAA;IACE,IAAI,CAACoG,MAAM,GAAGyD,4DAAE,CAACC,kFAAwB,EAAE;MACzCE,UAAU,EAAE,CAAC,WAAW,EAAE,SAAS,CAAC;MACpCC,eAAe,EAAE;KAClB,CAAC;EACJ;EAEA/D,MAAMA,CAAA;IACJ,IAAI,CAACE,MAAM,CAAC8D,OAAO,EAAE;EACvB;EAEAC,WAAWA,CAAC9G,OAAe;IACzB,IAAI,CAAC+C,MAAM,CAACgE,IAAI,CAAC,UAAU,EAAE/G,OAAO,CAAC;EACvC;EAEA8C,OAAOA,CAACkE,KAAa;IACnB,OAAO,IAAIT,4CAAU,CAAOU,QAAQ,IAAI;MACtC,IAAI,CAAClE,MAAM,CAACmE,EAAE,CAACF,KAAK,EAAGhE,IAAS,IAAI;QAClCiE,QAAQ,CAAC7G,IAAI,CAAC4C,IAAI,CAAC;MACrB,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ;;AAxBWS,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;SAAbA,aAAa;EAAAyC,OAAA,EAAbzC,aAAa,CAAA0C,IAAA;EAAAG,UAAA,EAFZ;AAAM;;;;;;;;;;;;;;;;;;ACFuC;;;AAE3D,MAGa7F,WAAW;EACtB9D,YAAoBwK,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAEhB,KAAAC,MAAM,GAAWX,4EAAkB;EAFJ;EAIvC9G,aAAaA,CAAC0H,QAAkB;IAC9B,OAAO,IAAI,CAACF,IAAI,CAACG,IAAI,CAAW,GAAG,IAAI,CAACF,MAAM,UAAU,EAAEC,QAAQ,CAAC;EACrE;EACApD,KAAKA,CAACoD,QAAkB;IACtB,OAAO,IAAI,CAACF,IAAI,CAACG,IAAI,CAAO,GAAG,IAAI,CAACF,MAAM,gBAAgB,EAAEC,QAAQ,CAAC;EACvE;EACApE,eAAeA,CAAA;IACb,OAAO,IAAI,CAACkE,IAAI,CAACzF,GAAG,CAAY,GAAG,IAAI,CAAC0F,MAAM,SAAS,CAAC;EAC1D;EACA9D,kBAAkBA,CAAChB,MAAc;IAC/B,OAAO,IAAI,CAAC6E,IAAI,CAACzF,GAAG,CAAY,GAAG,IAAI,CAAC0F,MAAM,WAAW9E,MAAM,EAAE,CAAC;EACpE;EACAwC,aAAaA,CAACuC,QAAkB;IAC9B,OAAO,IAAI,CAACF,IAAI,CAACG,IAAI,CAAW,GAAG,IAAI,CAACF,MAAM,iBAAiB,EAAEC,QAAQ,CAAC;EAC5E;;AAnBW5G,WAAW;mBAAXA,WAAW,EAAArD,sDAAA,CAAAZ,4DAAA;AAAA;AAAXiE,WAAW;SAAXA,WAAW;EAAAyF,OAAA,EAAXzF,WAAW,CAAA0F,IAAA;EAAAG,UAAA,EAFV;AAAM;;;;;;;;;;;;;;;ACPb,MAAMG,WAAW,GAAG;EACzBe,UAAU,EAAE,KAAK;EACjBJ,MAAM,EAAE,uBAAuB;EAC/BV,YAAY,EAAE;CACf;;;;;;;;;;;;;;ACF4C;AAG7Ce,sEAAA,EAAwB,CAACE,eAAe,CAAC7J,sDAAS,CAAC,CAChD8J,KAAK,CAACC,GAAG,IAAI9H,OAAO,CAACD,KAAK,CAAC+H,GAAG,CAAC,CAAC","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/create-user-form/create-user-form.component.ts","./src/app/components/create-user-form/create-user-form.component.html","./src/app/components/footer/footer.component.ts","./src/app/components/footer/footer.component.html","./src/app/components/header/header.component.ts","./src/app/components/header/header.component.html","./src/app/components/index/index.component.ts","./src/app/components/index/index.component.html","./src/app/components/login-form/login-form.component.ts","./src/app/components/login-form/login-form.component.html","./src/app/components/release-grades/release-grades.component.ts","./src/app/components/release-grades/release-grades.component.html","./src/app/interceptors/auth.interceptor.ts","./src/app/services/guards/not-authenticated.guard.ts","./src/app/services/socket.service.ts","./src/app/services/user.service.ts","./src/environments/environment.development.ts","./src/main.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LoginFormComponent } from './components/login-form/login-form.component';\nimport { CreateUserFormComponent } from './components/create-user-form/create-user-form.component';\nimport { IndexComponent } from './components/index/index.component';\nimport { ReleaseGradesComponent } from './components/release-grades/release-grades.component';\nimport { AuthGuard } from './services/guards/not-authenticated.guard';\n\nconst routes: Routes = [\n  { path: '', component: IndexComponent },\n  {\n    path: 'grades',\n    component: ReleaseGradesComponent,\n    canActivate: [AuthGuard],\n  },\n  { path: 'login', component: LoginFormComponent },\n  { path: 'createUser', component: CreateUserFormComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent {\n  title = 'front-dnc';\n}\n","<app-header></app-header>\n<router-outlet></router-outlet>\n<app-footer></app-footer>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginFormComponent } from './components/login-form/login-form.component';\nimport { HeaderComponent } from './components/header/header.component';\nimport { FooterComponent } from './components/footer/footer.component';\nimport { CreateUserFormComponent } from './components/create-user-form/create-user-form.component';\nimport { AuthInterceptor } from './interceptors/auth.interceptor';\nimport { IndexComponent } from './components/index/index.component';\nimport { ReleaseGradesComponent } from './components/release-grades/release-grades.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginFormComponent,\n    HeaderComponent,\n    FooterComponent,\n    CreateUserFormComponent,\n    IndexComponent,\n    ReleaseGradesComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    FormsModule,\n    HttpClientModule,\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: AuthInterceptor,\n      multi: true,\n    },\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Subject, catchError, of } from 'rxjs';\nimport { Teacher } from 'src/app/interfaces/Teacher';\nimport { UserService } from 'src/app/services/user.service';\n\n@Component({\n  selector: 'app-create-user-form',\n  templateUrl: './create-user-form.component.html',\n  styleUrls: ['./create-user-form.component.css'],\n})\nexport class CreateUserFormComponent {\n  user!: Teacher;\n  form!: FormGroup;\n  error$ = new Subject<true>();\n  erro!: string;\n\n  constructor(\n    private userService: UserService,\n    private router: Router,\n    private formBuilder: FormBuilder\n  ) {\n    this.createForm();\n  }\n\n  createForm(): void {\n    this.form = this.formBuilder.group({\n      email: ['', [Validators.required]],\n      name: ['', [Validators.required]],\n      password: ['', [Validators.required]],\n    });\n  }\n\n  onSubmit(): void {\n    this.userService\n      .createTeacher(this.form.value)\n      .pipe(\n        catchError((error) => {\n          console.error(error);\n          if (error.error.message != undefined) {\n            console.log('eita');\n            this.erro = error.error.message.msg;\n          }\n\n          this.erro = error.error.error;\n          this.error$.next(true);\n          return of();\n        })\n      )\n      .subscribe({\n        next: () => {\n          alert('Usuário criado com sucesso!');\n          this.router.navigate(['']);\n        },\n      });\n  }\n}\n","<form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\n  <div class=\"text-center container\" id=\"containerCreate\">\n    <img\n      class=\"mb-4\"\n      src=\"/assets/person-add.svg\"\n      alt=\"\"\n      width=\"72\"\n      height=\"57\"\n    />\n    <h2 class=\"h3 mb-3 fw-normal\">Preencha os dados abaixo!</h2>\n    <div class=\"form-group\">\n      <input\n        class=\"form-control\"\n        type=\"text\"\n        id=\"name\"\n        formControlName=\"name\"\n        placeholder=\"Digite seu nome\"\n      />\n      <div\n        class=\"text-danger mt-2 mb-4\"\n        *ngIf=\"form.get('name')?.errors && form.get('name')?.touched\"\n      >\n        Obrigatório informar o nome!\n      </div>\n    </div>\n\n    <div>\n      <input\n        class=\"form-control\"\n        type=\"email\"\n        id=\"email\"\n        formControlName=\"email\"\n        placeholder=\"Digite seu email de usuário\"\n      />\n      <div\n        class=\"text-danger mt-2 mb-4\"\n        *ngIf=\"form.get('user')?.errors && form.get('user')?.touched\"\n      >\n        Obrigatório informar o nome de usuário!\n      </div>\n    </div>\n\n    <div class=\"form-group\">\n      <input\n        class=\"form-control\"\n        type=\"password\"\n        id=\"password\"\n        formControlName=\"password\"\n        placeholder=\"Digite sua senha\"\n      />\n      <div\n        class=\"text-danger mt-2 mb-4\"\n        *ngIf=\"form.get('password')?.errors && form.get('password')?.touched\"\n      >\n        Obrigatório informar a sua senha!\n      </div>\n    </div>\n    <div class=\"text-danger mt-2 mb-4\" *ngIf=\"error$ | async\">\n      Erro ao realizar o cadastro, preencha novamente conferindo os dados.\n    </div>\n    <div class=\"text-danger mt-2 mb-4\" *ngIf=\"error$ | async\">\n      {{ erro }}\n    </div>\n\n    <input\n      class=\"btn btn-primary btn-lg mt-4\"\n      type=\"submit\"\n      value=\"Criar\"\n      [disabled]=\"!form.valid\"\n    />\n  </div>\n</form>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent {\n\n}\n","<div class=\"fixed-bottom d-flex justify-content-evenly\">\n  <p>© 2023</p>\n  <p>Desenvolvido por: Victor Castro</p>\n</div>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css'],\n})\nexport class HeaderComponent {\n  constructor() {}\n}\n","<nav class=\"navbar navbar-expand-lg navbar-light bg-light p-4\">\n  <div class=\"container-fluid\">\n    <a class=\"navbar-brand\" href=\"/\">\n      <img src=\"/assets/check-all.svg\" alt=\"\" width=\"40\" height=\"30\" />\n      Ranking de alunos na plataforma\n    </a>\n    <button class=\"btn btn-primary\" type=\"submit\" routerLink=\"/grades\">\n      Lançar notas\n    </button>\n  </div>\n</nav>\n","import { Component } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Student } from 'src/app/interfaces/Student';\nimport { UserService } from 'src/app/services/user.service';\nimport { SocketService } from 'src/app/services/socket.service';\n\n@Component({\n  selector: 'app-index',\n  templateUrl: './index.component.html',\n  styleUrls: ['./index.component.css'],\n})\nexport class IndexComponent {\n  students!: Student[];\n  studentBySchool!: Student[];\n  school!: string;\n\n  constructor(\n    private route: ActivatedRoute,\n    private userService: UserService,\n    private socketService: SocketService\n  ) {\n    this.listGlobalRanking();\n\n    this.socketService.conect();\n\n    this.socketService.onEvent('connect').subscribe((socket) => {\n      console.log('Conectado ao socket');\n      this.socketService.onEvent('newGrades').subscribe((data) => {\n        console.log('recebido evento');\n        console.log(data);\n        this.listGlobalRanking();\n      });\n    });\n  }\n\n  listGlobalRanking(): void {\n    this.userService.getGlobalRaking().subscribe(\n      (users) => {\n        this.students = users;\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n  }\n\n  changeSchool(school: string) {\n    this.school = school;\n    this.listRankingBySchool();\n  }\n\n  listRankingBySchool(): void {\n    this.userService.getRankingBySchool(this.school as string).subscribe(\n      (users) => {\n        this.studentBySchool = users;\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n  }\n}\n","<body class=\"text-center container\">\n  <div class=\"container\">\n    <h3 class=\"text-sm-center mb-5\">Ranking global de alunos</h3>\n    <div class=\"card-group\">\n      <div class=\"card mb-2\" *ngFor=\"let student of students; let i = index\">\n        <div class=\"card-body\">\n          <h4>Posição: {{ i + 1 }}</h4>\n          <p class=\"card-text\">Id: {{ student.id }}</p>\n          <p class=\"card-text\">Nome: {{ student.name }}</p>\n          <p class=\"card-text\">Escola: {{ student.school }}</p>\n          <p class=\"card-text\">Nota total: {{ student.totalSum }}</p>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <h3 class=\"text-sm-center mb-5 mt-5\">Ranking por escola</h3>\n  <button class=\"btn btn-info mx-2\" (click)=\"changeSchool('Dados')\">\n    Dados\n  </button>\n  <button class=\"btn btn-info mx-2\" (click)=\"changeSchool('Tecnologia')\">\n    Tecnologia\n  </button>\n  <button class=\"btn btn-info mx-2\" (click)=\"changeSchool('Produto')\">\n    Produto\n  </button>\n  <div class=\"card-group\">\n    <div\n      class=\"card mb-2 mt-5\"\n      *ngFor=\"let student of studentBySchool; let i = index\"\n    >\n      <div class=\"card-body\">\n        <h4>Posição: {{ i + 1 }}</h4>\n        <p class=\"card-text\">Id: {{ student.id }}</p>\n        <p class=\"card-text\">Nome: {{ student.name }}</p>\n        <p class=\"card-text\">Escola: {{ student.school }}</p>\n      </div>\n    </div>\n  </div>\n</body>\n","import { Component, Input } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Subject, catchError, of } from 'rxjs';\nimport { SuccessMessage } from 'src/app/interfaces/SuccessMessage';\nimport { UserService } from 'src/app/services/user.service';\n\n@Component({\n  selector: 'app-login-form',\n  templateUrl: './login-form.component.html',\n  styleUrls: ['./login-form.component.css'],\n})\nexport class LoginFormComponent {\n  constructor(\n    private userService: UserService,\n    private router: Router,\n    private formBuilder: FormBuilder\n  ) {\n    this.createForm();\n  }\n  form!: FormGroup;\n  error$ = new Subject<boolean>();\n  erro!: string;\n\n  createForm(): void {\n    this.form = this.formBuilder.group({\n      email: ['', [Validators.required]],\n      password: ['', [Validators.required]],\n    });\n  }\n\n  onSubmit(): void {\n    this.userService\n      .login(this.form.value)\n      .pipe(\n        catchError((error) => {\n          this.erro = error.error.message.msg.msg || error.error.message.msg;\n          this.error$.next(true);\n          return of();\n        })\n      )\n      .subscribe({\n        next: (data: any) => {\n          const jwt = sessionStorage.setItem('token', data.message as string);\n          alert('Usuário logado com sucesso!');\n          this.router.navigate(['/grades']);\n        },\n      });\n  }\n}\n","<body class=\"text-center container\">\r\n  <main class=\"form-signin\">\r\n    <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\r\n      <img\r\n        class=\"mb-4\"\r\n        src=\"/assets/person-fill-exclamation.svg\"\r\n        alt=\"\"\r\n        width=\"72\"\r\n        height=\"57\"\r\n      />\r\n      <h1 class=\"h3 mb-3 fw-normal\">Professor, faça o login!</h1>\r\n\r\n      <div class=\"form-floating\">\r\n        <input\r\n          type=\"email\"\r\n          class=\"form-control\"\r\n          id=\"email\"\r\n          formControlName=\"email\"\r\n          placeholder=\"usuario1\"\r\n        />\r\n        <label for=\"floatingInput\">Email de usuario</label>\r\n        <div\r\n          class=\"text-danger mt-2 mb-4\"\r\n          *ngIf=\"form.get('user')?.errors && form.get('user')?.touched\"\r\n        >\r\n          Obrigatório informar o usuário!\r\n        </div>\r\n      </div>\r\n      <div class=\"form-floating\">\r\n        <input\r\n          type=\"password\"\r\n          class=\"form-control\"\r\n          id=\"password\"\r\n          formControlName=\"password\"\r\n          placeholder=\"senha1\"\r\n        />\r\n        <label for=\"floatingPassword\">Senha</label>\r\n        <div\r\n          class=\"text-danger mt-2 mb-4\"\r\n          *ngIf=\"form.get('password')?.errors && form.get('password')?.touched\"\r\n        >\r\n          Obrigatório informar a senha!\r\n        </div>\r\n      </div>\r\n      <div class=\"text-danger mt-2 mb-4\" *ngIf=\"error$ | async\">\r\n        Erro ao realizar o login, preencha novamente conferindo os dados\r\n      </div>\r\n      <div class=\"text-danger mt-2 mb-4\" *ngIf=\"error$ | async\">\r\n        {{ erro }}\r\n      </div>\r\n      <button\r\n        class=\"w-100 btn btn-warning\"\r\n        type=\"submit\"\r\n        id=\"login\"\r\n        [disabled]=\"!form.valid\"\r\n      >\r\n        Login\r\n      </button>\r\n    </form>\r\n    <button class=\"btn btn-info w-100\" type=\"submit\" routerLink=\"/createUser\">\r\n      Ainda não tem um cadastro?\r\n    </button>\r\n  </main>\r\n</body>\r\n","import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Observable, Subject, catchError, of } from 'rxjs';\nimport { Teacher } from 'src/app/interfaces/Teacher';\nimport { UserService } from 'src/app/services/user.service';\n\n@Component({\n  selector: 'app-release-grades',\n  templateUrl: './release-grades.component.html',\n  styleUrls: ['./release-grades.component.css'],\n})\nexport class ReleaseGradesComponent {\n  user!: Teacher;\n  form!: FormGroup;\n  error$ = new Subject<true>();\n  erro!: string;\n\n  constructor(\n    private userService: UserService,\n    private router: Router,\n    private formBuilder: FormBuilder\n  ) {\n    this.createForm();\n  }\n\n  createForm(): void {\n    this.form = this.formBuilder.group({\n      id: ['', [Validators.required]],\n      name: ['', [Validators.required]],\n      school: ['', [Validators.required]],\n      activityName: ['', [Validators.required]],\n      grade: ['', [Validators.required]],\n    });\n  }\n\n  onSubmit(): void {\n    this.userService\n      .releaseGrades(this.form.value)\n      .pipe(\n        catchError((error) => {\n          console.error(error.error);\n          this.erro = error.error.error;\n          this.error$.next(true);\n          return of();\n        })\n      )\n      .subscribe({\n        next: () => {\n          alert('Nota lançada com sucesso!');\n          this.router.navigate(['']);\n        },\n      });\n  }\n}\n","<form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\n  <div class=\"text-center container\" id=\"containerCreate\">\n    <img\n      class=\"mb-4\"\n      src=\"/assets/person-add.svg\"\n      alt=\"\"\n      width=\"72\"\n      height=\"57\"\n    />\n    <h2 class=\"h3 mb-3 fw-normal\">\n      Preencha os dados abaixo para lançar a nota!\n    </h2>\n    <div class=\"form-group\">\n      <input\n        class=\"form-control\"\n        type=\"text\"\n        id=\"id\"\n        formControlName=\"id\"\n        placeholder=\"Digite o ID do aluno\"\n      />\n      <div\n        class=\"text-danger mt-2 mb-4\"\n        *ngIf=\"form.get('id')?.errors && form.get('id')?.touched\"\n      >\n        Obrigatório informar o ID!\n      </div>\n\n      <input\n        class=\"form-control\"\n        type=\"text\"\n        id=\"name\"\n        formControlName=\"name\"\n        placeholder=\"Digite o nome do aluno\"\n      />\n      <div\n        class=\"text-danger mt-2 mb-4\"\n        *ngIf=\"form.get('name')?.errors && form.get('name')?.touched\"\n      >\n        Obrigatório informar o nome!\n      </div>\n\n      <input\n        class=\"form-control\"\n        type=\"text\"\n        id=\"school\"\n        formControlName=\"school\"\n        placeholder=\"Escola do aluno: (Dados/Tecnologia/Produto)\"\n      />\n      <div\n        class=\"text-danger mt-2 mb-4\"\n        *ngIf=\"form.get('school')?.errors && form.get('school')?.touched\"\n      >\n        Obrigatório informar o nome da escola!\n      </div>\n\n      <input\n        class=\"form-control\"\n        type=\"text\"\n        id=\"activityName\"\n        formControlName=\"activityName\"\n        placeholder=\"Digite o nome da atividade\"\n      />\n      <div\n        class=\"text-danger mt-2 mb-4\"\n        *ngIf=\"\n          form.get('activityName')?.errors && form.get('activityName')?.touched\n        \"\n      >\n        Obrigatório informar o nome da atividade!\n      </div>\n\n      <input\n        class=\"form-control\"\n        type=\"number\"\n        min=\"0\"\n        max=\"100\"\n        id=\"grade\"\n        formControlName=\"grade\"\n        placeholder=\"Digite a nota do aluno de 0 a 100\"\n      />\n      <div\n        class=\"text-danger mt-2 mb-4\"\n        *ngIf=\"form.get('grade')?.errors && form.get('grade')?.touched\"\n      >\n        Obrigatório informar a nota de 0 a 100!\n      </div>\n    </div>\n    <div class=\"text-danger mt-2 mb-4\" *ngIf=\"error$ | async\">\n      Erro ao realizar o cadastro, preencha novamente conferindo os dados.\n    </div>\n    <div class=\"text-danger mt-2 mb-4\" *ngIf=\"error$ | async\">\n      {{ erro }}\n    </div>\n\n    <input\n      class=\"btn btn-primary btn-lg mt-4\"\n      type=\"submit\"\n      value=\"Criar\"\n      [disabled]=\"!form.valid\"\n    />\n  </div>\n</form>\n","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n  constructor() {}\n\n  intercept(\n    request: HttpRequest<unknown>,\n    next: HttpHandler\n  ): Observable<HttpEvent<unknown>> {\n    const jwt = sessionStorage.getItem('token') || 'teste';\n\n    const authReq = request.clone({\n      headers: request.headers.set('Authorization', jwt),\n    });\n\n    return next.handle(authReq);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  ActivatedRouteSnapshot,\n  CanActivate,\n  CanActivateFn,\n  Router,\n  RouterStateSnapshot,\n  UrlTree,\n} from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private router: Router) {}\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ):\n    | Observable<boolean | UrlTree>\n    | Promise<boolean | UrlTree>\n    | boolean\n    | UrlTree {\n    if (sessionStorage.getItem('token') != null) {\n      return true;\n    } else {\n      this.router.navigate(['/login']);\n      return false;\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport io, { Socket } from 'socket.io-client';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SocketService {\n  private socket: Socket;\n\n  constructor() {\n    this.socket = io(environment.websocketUrl, {\n      transports: ['websocket', 'polling'],\n      withCredentials: true,\n    });\n  }\n\n  conect() {\n    this.socket.connect();\n  }\n\n  sendMessage(message: string) {\n    this.socket.emit('mensagem', message);\n  }\n\n  onEvent(event: string): Observable<any> {\n    return new Observable<any>((observer) => {\n      this.socket.on(event, (data: any) => {\n        observer.next(data);\n      });\n    });\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, catchError, empty, of } from 'rxjs';\nimport { Student } from '../interfaces/Student';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserService {\n  constructor(private http: HttpClient) {}\n\n  private apiUrl: string = environment.apiUrl;\n\n  createTeacher(formData: FormData): Observable<FormData> {\n    return this.http.post<FormData>(`${this.apiUrl}/teacher`, formData);\n  }\n  login(formData: FormData): Observable<void> {\n    return this.http.post<void>(`${this.apiUrl}/teacher/login`, formData);\n  }\n  getGlobalRaking(): Observable<Student[]> {\n    return this.http.get<Student[]>(`${this.apiUrl}/grades`);\n  }\n  getRankingBySchool(school: string): Observable<Student[]> {\n    return this.http.get<Student[]>(`${this.apiUrl}/grades/${school}`);\n  }\n  releaseGrades(formData: FormData): Observable<FormData> {\n    return this.http.post<FormData>(`${this.apiUrl}/teacher/grades`, formData);\n  }\n}\n","export const environment = {\n  production: false,\n  apiUrl: 'http://localhost:9090',\n  websocketUrl: 'http://localhost:9090',\n};\n","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\n\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":["RouterModule","LoginFormComponent","CreateUserFormComponent","IndexComponent","ReleaseGradesComponent","AuthGuard","routes","path","component","canActivate","AppRoutingModule","forRoot","imports","i1","exports","AppComponent","constructor","title","selectors","decls","vars","template","AppComponent_Template","rf","ctx","i0","ɵɵelement","BrowserModule","FormsModule","ReactiveFormsModule","HTTP_INTERCEPTORS","HttpClientModule","HeaderComponent","FooterComponent","AuthInterceptor","AppModule","bootstrap","provide","useClass","multi","declarations","Validators","Subject","catchError","of","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","ctx_r4","erro","userService","router","formBuilder","error$","createForm","form","group","email","required","name","password","onSubmit","createTeacher","value","pipe","error","console","message","undefined","log","msg","next","subscribe","alert","navigate","ɵɵdirectiveInject","UserService","i2","Router","i3","FormBuilder","consts","CreateUserFormComponent_Template","ɵɵlistener","CreateUserFormComponent_Template_form_ngSubmit_0_listener","ɵɵtemplate","CreateUserFormComponent_div_7_Template","CreateUserFormComponent_div_10_Template","CreateUserFormComponent_div_13_Template","CreateUserFormComponent_div_14_Template","CreateUserFormComponent_div_16_Template","ɵɵproperty","tmp_1_0","get","errors","touched","tmp_2_0","tmp_3_0","ɵɵpipeBind1","valid","FooterComponent_Template","HeaderComponent_Template","i_r3","student_r2","id","school","totalSum","i_r5","student_r4","route","socketService","listGlobalRanking","conect","onEvent","socket","data","getGlobalRaking","users","students","changeSchool","listRankingBySchool","getRankingBySchool","studentBySchool","ActivatedRoute","SocketService","IndexComponent_Template","IndexComponent_div_5_Template","IndexComponent_Template_button_click_8_listener","IndexComponent_Template_button_click_10_listener","IndexComponent_Template_button_click_12_listener","IndexComponent_div_15_Template","ctx_r3","login","jwt","sessionStorage","setItem","LoginFormComponent_Template","LoginFormComponent_Template_form_ngSubmit_2_listener","LoginFormComponent_div_10_Template","LoginFormComponent_div_15_Template","LoginFormComponent_div_16_Template","LoginFormComponent_div_18_Template","ctx_r6","activityName","grade","releaseGrades","ReleaseGradesComponent_Template","ReleaseGradesComponent_Template_form_ngSubmit_0_listener","ReleaseGradesComponent_div_7_Template","ReleaseGradesComponent_div_9_Template","ReleaseGradesComponent_div_11_Template","ReleaseGradesComponent_div_13_Template","ReleaseGradesComponent_div_15_Template","ReleaseGradesComponent_div_16_Template","ReleaseGradesComponent_div_18_Template","tmp_4_0","tmp_5_0","intercept","request","getItem","authReq","clone","headers","set","handle","factory","ɵfac","state","ɵɵinject","providedIn","Observable","io","environment","websocketUrl","transports","withCredentials","connect","sendMessage","emit","event","observer","on","http","apiUrl","formData","post","HttpClient","production","__NgCli_bootstrap_1","platformBrowser","bootstrapModule","catch","err"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}